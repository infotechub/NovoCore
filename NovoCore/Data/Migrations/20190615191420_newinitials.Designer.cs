// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NovoCore.Data;

namespace NovoCore.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190615191420_newinitials")]
    partial class newinitials
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("NovoClasses.Models.AuthorizationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<string>("company");

                    b.Property<string>("diagnosis");

                    b.Property<string>("fullname");

                    b.Property<bool>("isnew");

                    b.Property<string>("policynumber");

                    b.Property<string>("providerName");

                    b.Property<int>("providerid");

                    b.Property<string>("reasonforcode");

                    b.HasKey("Id");

                    b.ToTable("AuthorizationRequest");
                });

            modelBuilder.Entity("NovoClasses.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("NovoClasses.Models.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Benefitcategory");

                    b.Property<string>("Benefitlimit");

                    b.Property<string>("CategoryName");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Benefit");
                });

            modelBuilder.Entity("NovoClasses.Models.BenefitsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Servicetype");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("BenefitsCategory");
                });

            modelBuilder.Entity("NovoClasses.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admission");

                    b.Property<DateTime>("AdmissionDate");

                    b.Property<bool>("AllprescibedDrugs");

                    b.Property<string>("AreaOfSpecialty");

                    b.Property<string>("AreaOfSpecialtyforspecialist");

                    b.Property<int>("ClaimBatchId");

                    b.Property<string>("ClaimsSerialNo");

                    b.Property<string>("ClientsideID");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Diagnosis");

                    b.Property<DateTime>("DischargeDate");

                    b.Property<DateTime>("DoctorSignecDate");

                    b.Property<bool>("DoctorSigned");

                    b.Property<string>("DoctorsId");

                    b.Property<string>("DoctorsName");

                    b.Property<string>("Durationoftreatment");

                    b.Property<string>("EVSCode");

                    b.Property<string>("EnrolleePlan");

                    b.Property<DateTime>("EnrolleeSignDate");

                    b.Property<int>("Enrolleeid");

                    b.Property<bool>("Feeding");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("LaboratoryInvestigation");

                    b.Property<int>("MyUserId");

                    b.Property<string>("Note");

                    b.Property<int>("ProviderId");

                    b.Property<DateTime>("ReVettedDate");

                    b.Property<int>("RevettedBy");

                    b.Property<DateTime>("ServiceDate");

                    b.Property<string>("Signature");

                    b.Property<bool>("SubmitByProvider");

                    b.Property<string>("Tag");

                    b.Property<string>("TreatmentCode");

                    b.Property<string>("TreatmentGiven");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<DateTime>("VettedDate");

                    b.Property<int>("capturedBy");

                    b.Property<string>("capturedName");

                    b.Property<string>("diagnosticsIDString");

                    b.Property<int>("enrolleeCompanyId");

                    b.Property<string>("enrolleeCompanyName");

                    b.Property<string>("enrolleeFullname");

                    b.Property<string>("enrolleeGender");

                    b.Property<string>("enrolleePolicyNumber");

                    b.Property<bool>("enrolleeSigned");

                    b.Property<string>("enrolleeage");

                    b.Property<string>("ipaddressofprovider");

                    b.Property<string>("referalCode");

                    b.Property<string>("specialistName");

                    b.Property<DateTime>("specialistSignecDate");

                    b.Property<bool>("specialistSigned");

                    b.Property<string>("specialistphonenumber");

                    b.Property<string>("status");

                    b.Property<int>("vettedBy");

                    b.Property<string>("vettedName");

                    b.HasKey("Id");

                    b.HasIndex("ClaimBatchId");

                    b.ToTable("Claim");
                });

            modelBuilder.Entity("NovoClasses.Models.ClaimBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountPaid");

                    b.Property<string>("AuthorizationNote");

                    b.Property<string>("AuthorizationStatus");

                    b.Property<int>("AuthorizedBy");

                    b.Property<DateTime>("AuthorizedDate");

                    b.Property<string>("Batch");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletionNote");

                    b.Property<string>("DestBankAccountNo");

                    b.Property<string>("DestBankName");

                    b.Property<DateTime>("DisapprovalDate");

                    b.Property<string>("DisapprovalNote");

                    b.Property<int>("DisapprovedBy");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("ProviderId");

                    b.Property<string>("ProviderName");

                    b.Property<DateTime>("SubmitedForPaymentDate");

                    b.Property<DateTime>("SubmitedForReviewDate");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<DateTime>("VetDate");

                    b.Property<string>("chequeno");

                    b.Property<int>("claimscountfromclient");

                    b.Property<DateTime>("datepaymentadvicesent");

                    b.Property<bool>("isremote");

                    b.Property<int>("markpaidby");

                    b.Property<int>("month");

                    b.Property<string>("paidby");

                    b.Property<bool>("paymentadvicesent");

                    b.Property<int>("paymentbatchId");

                    b.Property<DateTime>("paymentdate");

                    b.Property<string>("paymentmethod");

                    b.Property<string>("paymentmethodstring");

                    b.Property<string>("paymentref");

                    b.Property<string>("remark");

                    b.Property<DateTime>("reviewDate");

                    b.Property<int>("reviewedBy");

                    b.Property<string>("sourceBankAccountNo");

                    b.Property<string>("sourceBankName");

                    b.Property<string>("status");

                    b.Property<int>("submitedPaymentbyUser");

                    b.Property<int>("submitedReviewbyUser");

                    b.Property<int>("submitedVetbyUser");

                    b.Property<int>("year");

                    b.HasKey("Id");

                    b.HasIndex("paymentbatchId");

                    b.ToTable("ClaimBatch");
                });

            modelBuilder.Entity("NovoClasses.Models.ClaimDrug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaimId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DrugDescription");

                    b.Property<int>("DrugId");

                    b.Property<string>("DrugName");

                    b.Property<Guid>("Guid");

                    b.Property<decimal>("InitialAmount");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Quantity");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<decimal>("VettedAmount");

                    b.Property<string>("VettingComment");

                    b.Property<decimal>("costofdrug");

                    b.Property<bool>("flagred");

                    b.Property<string>("rate");

                    b.Property<string>("status");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimDrug");
                });

            modelBuilder.Entity("NovoClasses.Models.ClaimService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaimId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Duration");

                    b.Property<Guid>("Guid");

                    b.Property<decimal>("InitialAmount");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ServiceDescription");

                    b.Property<int>("ServiceId");

                    b.Property<string>("ServiceName");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<decimal>("VettedAmount");

                    b.Property<string>("VettingComment");

                    b.Property<decimal>("costofdrug");

                    b.Property<bool>("flagred");

                    b.Property<string>("rate");

                    b.Property<string>("status");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimService");
                });

            modelBuilder.Entity("NovoClasses.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("AuthorizationNote");

                    b.Property<int>("AuthorizationStatus");

                    b.Property<int>("AuthorizedBy");

                    b.Property<DateTime>("AuthorizedDate");

                    b.Property<string>("City");

                    b.Property<string>("Code");

                    b.Property<int>("CompanyListPageId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletionNote");

                    b.Property<string>("Description");

                    b.Property<DateTime>("DisapprovalDate");

                    b.Property<string>("DisapprovalNote");

                    b.Property<int>("DisapprovedBy");

                    b.Property<string>("Email");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LogoLink");

                    b.Property<int>("Logoid");

                    b.Property<string>("Name");

                    b.Property<long>("Parentid");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Plans");

                    b.Property<int>("RegAgeLimit");

                    b.Property<long>("Stateid");

                    b.Property<bool>("Status");

                    b.Property<int>("SubscriptionStatus");

                    b.Property<int>("SubsidiaryId");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<bool>("WeboperationMode");

                    b.Property<string>("Website");

                    b.Property<bool>("isRenewal");

                    b.Property<string>("regCode");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("NovoClasses.Models.CompanyBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Statecode");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<int>("companyId");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("CompanyBranch");
                });

            modelBuilder.Entity("NovoClasses.Models.CompanySubsidiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("ParentcompanyId");

                    b.Property<string>("Subsidaryname");

                    b.Property<string>("Subsidaryprofile");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("CompanySubsidiary");
                });

            modelBuilder.Entity("NovoClasses.Models.EnrolleePassport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("Enrolleeid");

                    b.Property<string>("Enrolleepolicyno");

                    b.Property<Guid>("Guid");

                    b.Property<byte[]>("Imgraw");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("EnrolleePassport");
                });

            modelBuilder.Entity("NovoClasses.Models.IncomingClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CapturerList");

                    b.Property<int>("ClaimBatchId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("DateReceived");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsRemoteSubmission");

                    b.Property<string>("Note");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<string>("caption");

                    b.Property<DateTime>("captureStarted");

                    b.Property<DateTime>("dateTransferAcknowledged");

                    b.Property<string>("deliveredby");

                    b.Property<DateTime>("fullDateofbill");

                    b.Property<int>("month");

                    b.Property<string>("month_string");

                    b.Property<int>("noofencounter");

                    b.Property<int>("providerid");

                    b.Property<int>("receivedBy");

                    b.Property<string>("status");

                    b.Property<decimal>("totalamount");

                    b.Property<int>("transferedTo");

                    b.Property<int>("transferstatus");

                    b.Property<int>("year");

                    b.HasKey("Id");

                    b.HasIndex("ClaimBatchId");

                    b.ToTable("IncomingClaims");
                });

            modelBuilder.Entity("NovoClasses.Models.Lga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("DelistedProviderPageId");

                    b.Property<int>("EnrolleeDetailsPageId");

                    b.Property<int>("EnrolleeListPageId");

                    b.Property<int>("EnrolleePageId");

                    b.Property<int>("EnrolleeRegPageId");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("ProviderPageId");

                    b.Property<long>("State");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Lga");
                });

            modelBuilder.Entity("NovoClasses.Models.NovoAuthorizationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcknowledgedByAuthorizer");

                    b.Property<DateTime>("AdmissionDate");

                    b.Property<int>("Authorizedby");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("DaysApprovded");

                    b.Property<string>("Diagnosis");

                    b.Property<DateTime>("DischargeDate");

                    b.Property<string>("EnrolleeCompany");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsNHIS");

                    b.Property<bool>("Isadmission");

                    b.Property<string>("Note");

                    b.Property<string>("Plan");

                    b.Property<string>("TypeofAuthorization");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<string>("admissionStatus");

                    b.Property<string>("authorizationCode");

                    b.Property<bool>("deliverysmssent");

                    b.Property<int>("enrolleeAge");

                    b.Property<int>("enrolleeID");

                    b.Property<string>("enrolleeName");

                    b.Property<int>("generatedby");

                    b.Property<bool>("isdelivery");

                    b.Property<string>("policyNumber");

                    b.Property<int>("provider");

                    b.Property<string>("requestername");

                    b.Property<string>("requesterphone");

                    b.Property<string>("treatmentAuthorized");

                    b.HasKey("Id");

                    b.ToTable("AuthorizationCode");
                });

            modelBuilder.Entity("NovoClasses.Models.PaymentBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<int>("createdBy");

                    b.Property<DateTime>("datepaymentcompleted");

                    b.Property<DateTime>("datepaymentstarted");

                    b.Property<int>("paidby");

                    b.Property<string>("status");

                    b.Property<int>("terminatedby");

                    b.Property<DateTime>("terminationdate");

                    b.HasKey("Id");

                    b.ToTable("PaymentBatch");
                });

            modelBuilder.Entity("NovoClasses.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Area");

                    b.Property<int>("Assignee");

                    b.Property<string>("AuthorizationNote");

                    b.Property<int>("AuthorizationStatus");

                    b.Property<int>("AuthorizedBy");

                    b.Property<DateTime>("AuthorizedDate");

                    b.Property<string>("Category");

                    b.Property<string>("Code");

                    b.Property<string>("CompanyConsession");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletionNote");

                    b.Property<string>("DelistNote");

                    b.Property<int>("DelistedProviderPageId");

                    b.Property<DateTime>("DisapprovalDate");

                    b.Property<string>("DisapprovalNote");

                    b.Property<int>("DisapprovedBy");

                    b.Property<string>("Email");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("LgaId");

                    b.Property<string>("Name");

                    b.Property<long>("Parentid");

                    b.Property<string>("PaymentEmail1");

                    b.Property<string>("PaymentEmail2");

                    b.Property<string>("Phone");

                    b.Property<string>("Phone2");

                    b.Property<int>("ProviderApprovalPageId");

                    b.Property<int>("ProviderListPageId");

                    b.Property<string>("ProviderTariffs");

                    b.Property<int>("Provideraccount2Id");

                    b.Property<int>("ProvideraccountId");

                    b.Property<string>("Providergpscordinate");

                    b.Property<string>("Providerplans");

                    b.Property<string>("Providerservices");

                    b.Property<int>("StateId");

                    b.Property<bool>("Status");

                    b.Property<string>("SubCode");

                    b.Property<int>("TariffContentPageId");

                    b.Property<int>("TariffPageId");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<string>("Website");

                    b.Property<int>("delistedBy");

                    b.Property<DateTime>("delisteddate");

                    b.Property<bool>("isDelisted");

                    b.Property<int>("providerloginId");

                    b.HasKey("Id");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("NovoClasses.Models.ProviderAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorizationNote");

                    b.Property<int>("AuthorizationStatus");

                    b.Property<int>("AuthorizedBy");

                    b.Property<DateTime>("AuthorizedDate");

                    b.Property<int>("BankId");

                    b.Property<string>("Bankaccountname");

                    b.Property<string>("Bankaccountnum");

                    b.Property<string>("Bankbranch");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("DisapprovalDate");

                    b.Property<string>("DisapprovalNote");

                    b.Property<int>("DisapprovedBy");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<int>("Providerid");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("ProviderAccount");
                });

            modelBuilder.Entity("NovoClasses.Models.ProviderAssignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Providerid");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<int>("Userid");

                    b.HasKey("Id");

                    b.ToTable("ProviderAssignee");
                });

            modelBuilder.Entity("NovoClasses.Models.ProviderLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Altemail");

                    b.Property<string>("Altemail2");

                    b.Property<string>("Altemail3");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("LastClaimSubmited");

                    b.Property<int>("ProviderId");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<bool>("active");

                    b.Property<string>("browserid");

                    b.Property<string>("email");

                    b.Property<DateTime>("lastlogin");

                    b.Property<string>("lastloginId");

                    b.Property<string>("password");

                    b.Property<bool>("passwordchange");

                    b.HasKey("Id");

                    b.ToTable("ProviderLogin");
                });

            modelBuilder.Entity("NovoClasses.Models.ProviderRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<string>("FeedBack");

                    b.Property<string>("Fullname");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<DateTime>("dateaccessed");

                    b.Property<int>("enrolleeid");

                    b.Property<int>("providerID");

                    b.Property<int>("rating");

                    b.HasKey("Id");

                    b.ToTable("ProviderRating");
                });

            modelBuilder.Entity("NovoClasses.Models.ProviderService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("OpeningDays");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<string>("description");

                    b.Property<int>("providerId");

                    b.HasKey("Id");

                    b.HasIndex("providerId");

                    b.ToTable("ProviderServices");
                });

            modelBuilder.Entity("NovoClasses.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("DelistedProviderPageId");

                    b.Property<int>("EnrolleeDetailsPageId");

                    b.Property<int>("EnrolleeListPageId");

                    b.Property<int>("EnrolleePageId");

                    b.Property<int>("EnrolleeRegPageId");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("ProviderPageId");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<long>("Zone");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("NovoCore.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("NovoCore.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("CugMobileNumber");

                    b.Property<string>("Dob");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<Guid>("Guid");

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastLoginDate");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<int?>("LoginAttempts");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("NovoCore.Models.FacilitiesAllowed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy");

                    b.Property<string>("Address");

                    b.Property<string>("CompanyId");

                    b.Property<string>("CompanyName");

                    b.Property<string>("CompanyPlanId");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<int?>("FacilitiesAllowedPageId");

                    b.Property<Guid?>("Guid");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Planid");

                    b.Property<string>("ProviderId");

                    b.Property<int?>("SiteId");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("FacilitiesAllowed");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("NovoCore.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NovoCore.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NovoCore.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("NovoCore.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NovoCore.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NovoCore.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NovoClasses.Models.Claim", b =>
                {
                    b.HasOne("NovoClasses.Models.ClaimBatch", "ClaimBatch")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimBatchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NovoClasses.Models.ClaimBatch", b =>
                {
                    b.HasOne("NovoClasses.Models.PaymentBatch", "PaymentBatch")
                        .WithMany("ClaimBatches")
                        .HasForeignKey("paymentbatchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NovoClasses.Models.ClaimDrug", b =>
                {
                    b.HasOne("NovoClasses.Models.Claim", "Claim")
                        .WithMany("ClaimDrugs")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NovoClasses.Models.ClaimService", b =>
                {
                    b.HasOne("NovoClasses.Models.Claim", "Claim")
                        .WithMany("ClaimServices")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NovoClasses.Models.CompanyBranch", b =>
                {
                    b.HasOne("NovoClasses.Models.Company", "Company")
                        .WithMany("CompanyBranches")
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NovoClasses.Models.IncomingClaim", b =>
                {
                    b.HasOne("NovoClasses.Models.ClaimBatch", "ClaimBatch")
                        .WithMany("IncomingClaims")
                        .HasForeignKey("ClaimBatchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NovoClasses.Models.ProviderService", b =>
                {
                    b.HasOne("NovoClasses.Models.Provider", "Provider")
                        .WithMany("ProviderServices")
                        .HasForeignKey("providerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
